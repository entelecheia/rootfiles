# shellcheck shell=bash

readonly home_homebrew_prefix="${HOME}/.homebrew"

# First check OS.
OS="$(uname)"
if [[ "${OS}" == "Linux" ]]; then
    HOMEBREW_ON_LINUX=1
elif [[ "${OS}" == "Darwin" ]]; then
    HOMEBREW_ON_MACOS=1
fi
if [[ -n "${HOMEBREW_ON_MACOS-}" ]]; then
    # macOS
    UNAME_MACHINE="$(/usr/bin/uname -m)"
    if [[ "${UNAME_MACHINE}" == "arm64" ]]; then
    readonly homebrew_prefix="/opt/homebrew"
    else
    readonly homebrew_prefix="/usr/local"
    fi
elif [[ -n "${HOMEBREW_ON_LINUX-}" ]]; then
    # Linux
    readonly homebrew_prefix="/home/linuxbrew/.linuxbrew"
else
    # Unsupported OS
    readonly homebrew_prefix="${HOME}/.homebrew"
fi

PATH_ENTRY="${homebrew_prefix}/bin"
if [[ ":${PATH}:" != *":${PATH_ENTRY}:"* ]]; then
  export PATH="${PATH_ENTRY}:${PATH}"
fi

function is_package_installed() {
  local package="$1"

  command -v "${package}" >/dev/null 2>&1
}

function is_apt_package_installed() {
  local package="$1"

  if [[ "${DOTFILES_OS}" == "linux" ]] && command -v apt &>/dev/null; then
    apt list --quiet --quiet --installed "${package}" 2>/dev/null | grep --quiet .
  else
    return 1
  fi
}

function is_brew_package_installed() {
  local package="$1"

  if command -v brew &>/dev/null; then
    if brew list | (grep -q "^${package}$"; ret=$?; cat >/dev/null; exit $ret) then
      return 0
    else
      return 1
    fi
  else
    return 1
  fi
}

function is_brewcask_package_installed() {
  local package="$1"

  if command -v brew &>/dev/null; then
    if brew list --cask | (grep -q "^${package}$"; ret=$?; cat >/dev/null; exit $ret) then
      return 0
    else
      return 1
    fi
  else
    return 1
  fi
}

function is_snap_package_installed() {
  local package="$1"

  if [[ "${DOTFILES_OS}" == "linux" ]] && command -v snap &>/dev/null; then
    snap list "${package}" 2>/dev/null | grep --quiet .
  else
    return 1
  fi
}

function not_during_test() {
  if [[ "${DOTFILES_TEST:-}" == "true" ]]; then
    log_info "Skipping '${*}' because we are in test mode"
  else
    "${@}"
  fi
}

# https://stackoverflow.com/a/53640320/12156188
function service_exists() {
  local n=$1
  if [[ $(systemctl list-units --all -t service --full --no-legend "${n}.service" | sed 's/^\s*//g' | cut -f1 -d' ') == ${n}.service ]]; then
    return 0
  else
    return 1
  fi
}

function is_package_installed_by_package_managers() {
  local package="$1"

  if is_apt_package_installed "${package}"; then
    return 0
  elif is_brew_package_installed "${package}"; then
    return 0
  elif is_snap_package_installed "${package}"; then
    return 0
  else
    return 1
  fi
}
