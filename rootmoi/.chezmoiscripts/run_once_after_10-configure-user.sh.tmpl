#!/bin/bash
# {{ template "scripts-library" }}
log_task "Rootmoi: 10. Configuring user"

# # Configure passwordless sudo
# SUDOERS_FILE="/etc/sudoers"

# # Change USERNAME to the desired username
# USERNAME="{{ .non_root_user }}"

# # Check if the user already has sudo privileges in the sudoers file
# if ! grep -q "^$USERNAME\s\+ALL=" $SUDOERS_FILE; then
#     log_task 'Configuring passwordless sudo for {{ .non_root_user }}'
#     # Add the user with sudo privileges
#     c echo "$USERNAME ALL=(ALL:ALL) ALL" >> $SUDOERS_FILE

#     # Check syntax of the new sudoers file
#     if visudo -c; then
#         log_info "User $USERNAME added successfully."
#     else
#         # If there's a syntax error, remove the last line
#         c sed -i '$ d' $SUDOERS_FILE
#         log_error "Error: Syntax error after adding the user to the sudoers file."
#         exit 1
#     fi
# else
#     echo "User $USERNAME already has sudo privileges."
# fi

file='/etc/sudoers.d/{{ .non_root_user }}'
file_contents='{{ .non_root_user }}  ALL=(ALL) NOPASSWD:ALL'
if [[ ! -f "${file}" ]] || ! grep -q "${file_contents}" "${file}"; then
  log_task 'Configuring passwordless sudo for {{ .non_root_user }}'
  echo "${file_contents}" >"${file}"
fi
log_task 'Setting permissions on sudoers.d/{{ .non_root_user }}'
c chmod 0440 "${file}"
unset file file_contents

# shellcheck disable=SC2312
if ! getent group docker | grep -q '\b{{ .non_root_user }}\b'; then
  log_task 'Adding {{ .non_root_user }} to docker group'
  usermod -aG docker '{{ .non_root_user }}'
fi
